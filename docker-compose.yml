# docker-compose.yml
services:
  db:
    image: postgres:15-alpine
    container_name: credit_management-db-1
    environment:
      POSTGRES_DB: credit_db
      POSTGRES_USER: credit_user
      POSTGRES_PASSWORD: credit_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U credit_user -d credit_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:7-alpine
    container_name: credit_management-redis-1
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  app:
    build: .
    container_name: credit_management-app-1
    command: >
      sh -c "
        python /wait-for-db.py &&
        python manage.py migrate --noinput &&
        gunicorn credit_system.wsgi:application --bind 0.0.0.0:8000
      "
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://credit_user:credit_pass@db:5432/credit_db
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

  celery:
    build: .
    container_name: credit_management-celery-1
    command: celery -A credit_system worker -l info
    volumes:
      - .:/app
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://credit_user:credit_pass@db:5432/credit_db
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

volumes:
  postgres_data: